import streamlit as st 
from watermarking_solution import solution_1, solution_2
from helper_func import detector_function

st.title('Watermarking Language Models: Identifying and Preventing Attacks')

# Creating tabs
selected_tab = st.sidebar.selectbox("Select a tab:", ["Watermarker: Simple Solution", 
                                                      "Watermarker: Complete Solution", 
                                                      "Detector"])

# Solution 1
if selected_tab == "Watermarker: Simple Solution":
    user_input = st.text_input(f"Enter your prompt:")
    if st.button("Generate"):
        # Generate and display output
        output = solution_1(user_input)
        # st.write(output)
        st.markdown(f'<div style="background-color: #f0f0f0; padding: 10px; border-radius: 5px;">{output}</div>', 
                    unsafe_allow_html=True)
        # if output == "We cannot watermark such a prompt, please try another one.":
        #     st.error(output)
        # else:
        #     st.success(output)

# Solution 2 
elif selected_tab == "Watermarker: Complete Solution":
    user_input = st.text_input(f"Enter your prompt:")
    if st.button("Generate"):
        # Generate and display output
        output = solution_2(user_input)
        st.write(output)

# Solution 3
elif selected_tab == "Detector":
    user_input = st.text_input(f"Enter text for detection:")
    if st.button("Detector"):
        output = detector_function(user_input)
        if output == "This text was generated by a Language Model.":
            st.success(output)
        else:
            st.error(output)

